using JianLian.HDIS.CodeGenerator.Shared;using System;using System.Collections.Generic;using System.IO;using System.Linq;using System.Text;using System.Text.RegularExpressions;namespace JianLian.HDIS.CodeGenerator{    /// <summary>    /// ServiceGenerator    /// </summary>    public class ServiceGenerator    {        /// <summary>        /// 生成Service，只有不存在才生成        /// </summary>        /// <param name="tables"></param>        public static void Generator(List<InnerTable> tables)        {            string _tmpl = File.ReadAllText("..\\..\\..\\Tmpl\\ServiceTmpl.txt");            string path = $"{Utilities.BasePath}App\\JianLian.HDIS.Application\\Service\\";            tables.ForEach(table =>            {                //检查文件夹                string table_path = $"{path}{table.Prefix}";                if (!Directory.Exists(table_path))                {                    Directory.CreateDirectory(table_path);                }                //替换命名空间                var tmpl = _tmpl.Replace("@Prefix", table.Prefix);                //替换类描述                tmpl = tmpl.Replace("@TableDesc", table.TableDesc);                //替换类名首字母小写                tmpl = tmpl.Replace("@TableNameLower", table.TableNameLower);                //替换类名                tmpl = tmpl.Replace("@TableName", table.TableNameUpper);                // 替换 SetLabel 方法                var dicColumns = table.Columns.Where(c => c.DescDetailed.Contains("`DIC.") && !table.Columns.Any(x => x.ColumnNameCls == c.ColumnNameCls + "Label")).ToList();                if (dicColumns.Any())                {                    var builder = new StringBuilder();                    Regex regex = new Regex(@"`(DIC\..*?)`");                    foreach (var column in dicColumns)                    {                        var match = regex.Match(column.DescDetailed);                        if (!match.Success || match.Groups.Count != 2)                            continue;                        string code = match.Groups[1].Value.Replace(" ", "").Replace(".", "_");                        builder.AppendLine($"                view.{column.ColumnNameCls}Label = Utility.Helper.SystemDicHelper.GetLabelByValue(Domain.Shared.Consts.SysDicTypeCode.{code}, view.{column.ColumnNameCls});");                    }                    builder.Remove(builder.Length - 2, 2);                    tmpl = tmpl.Replace("@SetLabel", builder.ToString());                }                else                {                    tmpl = tmpl.Replace("@SetLabel", "");                }                //生成文件                Utilities.CreateFile($"{table_path}\\{table.TableNameUpper}Service.cs", tmpl, false);            });            Console.WriteLine("ServiceGenerator Completed!");        }    }}