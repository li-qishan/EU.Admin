// <auto-generated />
using System;
using EU.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EU.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EU.Domain.System.SmModule", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BelongModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDetail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowBatchDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowSubmit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowView")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoutePath")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("SmRoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TaxisNo")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ParentId");

                    b.HasIndex("SmRoleID");

                    b.ToTable("SmModules");
                });

            modelBuilder.Entity("EU.Model.BFProject.Approval", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AmountSource")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BiddingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractPhone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeclareDepartment")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeclareLeader")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeclareLeaderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeclareLeaderOption")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DeclarePerson")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeclareTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EngineeringDepartmentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EngineeringDepartmentDate1")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EngineeringDepartmentLeaderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EngineeringDepartmentLeaderOption")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("EngineeringDepartmentLeaderPerson")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EngineeringDepartmentOption")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("EngineeringDepartmentOption1")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("EngineeringDepartmentPerson")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EngineeringDepartmentPerson1")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EngineeringType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverThree")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MainLeaderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MainLeaderOption")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("MainLeaderPerson")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectAddress")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ProjectBudget")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectContent")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ProjectDeclareReason")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReasonDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReasonPerson")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("Approval");
                });

            modelBuilder.Entity("EU.Model.BFProject.BFContract", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovalNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ContractAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("ContractCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContractName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contractor")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContractorCharge")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employer")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployerPhone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverThree")
                        .HasColumnType("bit");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperatorPhone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectCharge")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectChargeCard")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectChargePhone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReadStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ApprovalId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("EU.Model.BFProject.BeforeImplement", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProjectImplementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ProjectImplementId");

                    b.ToTable("BeforeImplement");
                });

            modelBuilder.Entity("EU.Model.BFProject.CompletionFinalAccount", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActualCompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AuditAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("AuditRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditUnit")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("CutAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("CutRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("FinalAccount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("FinalAccountPerson")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinalRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReadStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubmitAuditAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ApprovalId");

                    b.ToTable("CompletionFinalAccount");
                });

            modelBuilder.Entity("EU.Model.BFProject.ImplementProcess", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImplementProgress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProjectImplementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ProjectImplementId");

                    b.ToTable("ImplementProcess");
                });

            modelBuilder.Entity("EU.Model.BFProject.InvoiceRegist", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRefund")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ContractId");

                    b.ToTable("InvoiceRegist");
                });

            modelBuilder.Entity("EU.Model.BFProject.Payment.ApplyPay", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Agent")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ApplyPayAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("ApplyReason")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("HasPayAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("NoPayAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("PayProgress")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("ProjectProgress")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalContractAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ContractId");

                    b.ToTable("ApplyPay");
                });

            modelBuilder.Entity("EU.Model.BFProject.Payplan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("PaymentProportion")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStage")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxisNo")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("ContractId");

                    b.ToTable("Payplan");
                });

            modelBuilder.Entity("EU.Model.BFProject.ProjectImplement", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BfContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControlUnit")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImplementProgress")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InputUser")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsComplated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("BfContractId");

                    b.ToTable("ProjectImplement");
                });

            modelBuilder.Entity("EU.Model.System.CompanyStructure.SmCompany", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyShortName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("SmCompany");
                });

            modelBuilder.Entity("EU.Model.System.CompanyStructure.SmDepartment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SmDepartment");
                });

            modelBuilder.Entity("EU.Model.System.FileAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileExt")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("FileAttachment");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmFunctionPrivilege", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayPosition")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FunctionCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FunctionName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SmModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TaxisNo")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("SmModuleId");

                    b.ToTable("SmFunctionPrivilege");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmRoleFunction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NoActionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SmFunctionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SmRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("SmFunctionId");

                    b.HasIndex("SmRoleId");

                    b.ToTable("SmRoleFunction");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmRoleModule", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SmModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SmRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("SmModuleId");

                    b.HasIndex("SmRoleId");

                    b.ToTable("SmRoleModule");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmUserRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SmRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SmUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("SmRoleId");

                    b.HasIndex("SmUserId");

                    b.ToTable("SmUserRole");
                });

            modelBuilder.Entity("EU.Model.System.Setup.SmAutoCode", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateFormatType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NumberCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberLength")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("SmAutoCode");
                });

            modelBuilder.Entity("EU.Model.System.SmLov", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AbateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InureTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LovCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LovName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("SmLov");
                });

            modelBuilder.Entity("EU.Model.System.SmLovDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AbateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InureTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SmLovId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TaxisNo")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("SmLovId");

                    b.ToTable("SmLovDetail");
                });

            modelBuilder.Entity("EU.Model.System.SmRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("SmRoles");
                });

            modelBuilder.Entity("EU.Model.System.SmSchedule", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("SmSchedule");
                });

            modelBuilder.Entity("EU.Model.System.SmUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserAccount")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("SmUsers");
                });

            modelBuilder.Entity("EU.Model.System.WorkFlow.SmEdge", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SmProjectFlowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("edgeid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("index")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceAnchor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("target")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetAnchor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SmProjectFlowId");

                    b.ToTable("SmEdges");
                });

            modelBuilder.Entity("EU.Model.System.WorkFlow.SmNode", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RejectionType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("SmProjectFlowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("index")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nodeid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("x")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("y")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SmProjectFlowId");

                    b.ToTable("SmNodes");
                });

            modelBuilder.Entity("EU.Model.System.WorkFlow.SmProjectFlow", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentNode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FlowCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FlowName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ImportDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SmModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StructureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxisNo")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("SmModuleId");

                    b.ToTable("SmProjectFlow");
                });

            modelBuilder.Entity("EU.Domain.System.SmModule", b =>
                {
                    b.HasOne("EU.Domain.System.SmModule", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("EU.Model.System.SmRole", null)
                        .WithMany("RoleModules")
                        .HasForeignKey("SmRoleID");
                });

            modelBuilder.Entity("EU.Model.BFProject.BFContract", b =>
                {
                    b.HasOne("EU.Model.BFProject.Approval", "Approval")
                        .WithMany()
                        .HasForeignKey("ApprovalId");
                });

            modelBuilder.Entity("EU.Model.BFProject.BeforeImplement", b =>
                {
                    b.HasOne("EU.Model.BFProject.ProjectImplement", "ProjectImplement")
                        .WithMany()
                        .HasForeignKey("ProjectImplementId");
                });

            modelBuilder.Entity("EU.Model.BFProject.CompletionFinalAccount", b =>
                {
                    b.HasOne("EU.Model.BFProject.Approval", "Approval")
                        .WithMany()
                        .HasForeignKey("ApprovalId");
                });

            modelBuilder.Entity("EU.Model.BFProject.ImplementProcess", b =>
                {
                    b.HasOne("EU.Model.BFProject.ProjectImplement", "ProjectImplement")
                        .WithMany()
                        .HasForeignKey("ProjectImplementId");
                });

            modelBuilder.Entity("EU.Model.BFProject.InvoiceRegist", b =>
                {
                    b.HasOne("EU.Model.BFProject.BFContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");
                });

            modelBuilder.Entity("EU.Model.BFProject.Payment.ApplyPay", b =>
                {
                    b.HasOne("EU.Model.BFProject.BFContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");
                });

            modelBuilder.Entity("EU.Model.BFProject.Payplan", b =>
                {
                    b.HasOne("EU.Model.BFProject.BFContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");
                });

            modelBuilder.Entity("EU.Model.BFProject.ProjectImplement", b =>
                {
                    b.HasOne("EU.Model.BFProject.BFContract", "BfContract")
                        .WithMany()
                        .HasForeignKey("BfContractId");
                });

            modelBuilder.Entity("EU.Model.System.CompanyStructure.SmDepartment", b =>
                {
                    b.HasOne("EU.Model.System.CompanyStructure.SmCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("EU.Model.System.CompanyStructure.SmDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmFunctionPrivilege", b =>
                {
                    b.HasOne("EU.Domain.System.SmModule", "SmModule")
                        .WithMany()
                        .HasForeignKey("SmModuleId");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmRoleFunction", b =>
                {
                    b.HasOne("EU.Model.System.Privilege.SmFunctionPrivilege", "SmFunction")
                        .WithMany()
                        .HasForeignKey("SmFunctionId");

                    b.HasOne("EU.Model.System.SmRole", "SmRole")
                        .WithMany()
                        .HasForeignKey("SmRoleId");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmRoleModule", b =>
                {
                    b.HasOne("EU.Domain.System.SmModule", "SmModule")
                        .WithMany()
                        .HasForeignKey("SmModuleId");

                    b.HasOne("EU.Model.System.SmRole", "SmRole")
                        .WithMany()
                        .HasForeignKey("SmRoleId");
                });

            modelBuilder.Entity("EU.Model.System.Privilege.SmUserRole", b =>
                {
                    b.HasOne("EU.Model.System.SmRole", "SmRole")
                        .WithMany()
                        .HasForeignKey("SmRoleId");

                    b.HasOne("EU.Model.System.SmUser", "SmUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("SmUserId");
                });

            modelBuilder.Entity("EU.Model.System.SmLovDetail", b =>
                {
                    b.HasOne("EU.Model.System.SmLov", "SmLov")
                        .WithMany("SmLovDetail")
                        .HasForeignKey("SmLovId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EU.Model.System.WorkFlow.SmEdge", b =>
                {
                    b.HasOne("EU.Model.System.WorkFlow.SmProjectFlow", "SmProjectFlow")
                        .WithMany()
                        .HasForeignKey("SmProjectFlowId");
                });

            modelBuilder.Entity("EU.Model.System.WorkFlow.SmNode", b =>
                {
                    b.HasOne("EU.Model.System.WorkFlow.SmProjectFlow", "SmProjectFlow")
                        .WithMany()
                        .HasForeignKey("SmProjectFlowId");
                });

            modelBuilder.Entity("EU.Model.System.WorkFlow.SmProjectFlow", b =>
                {
                    b.HasOne("EU.Domain.System.SmModule", "SmModule")
                        .WithMany()
                        .HasForeignKey("SmModuleId");
                });
#pragma warning restore 612, 618
        }
    }
}
